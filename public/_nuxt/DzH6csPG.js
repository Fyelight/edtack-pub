import{o as n,c as o,t as i,q as b,a as r,v as a,x as m,F as d,y as p,z as h,A as v,b as w}from"./DX4Xkoew.js";import{u as g}from"./YNNEtX62.js";import{_ as y}from"./DlAUqK2U.js";const S={key:0},L={__name:"AIAnswer",props:{answer:{type:String,default:"Answer will be displayed here."}},setup(l){return(e,u)=>(n(),o("div",null,[l.answer?(n(),o("p",S,i(l.answer),1)):b("",!0)]))}},_={data(){return{answer:"",isLoading:!1,selectedLevel:"",selectedSubject:"",numberInput:null,levels:["Primary 1","Secondary 1","Junior College 1"],subjects:["Math","Science","English","History","Geography"],format:`return a list in json with id, title, options and the correct answer
`}},methods:{createPrompt(l,e,u){return`You are an expert teacher skilled in producing detailed, authentic, and correct student examination questions.
        For the Singapore syllabus, how would you create ${l} MCQ questions of 5 options about ${e} ${u}, with varying difficulties.
        Make it so there are matching options such as "statement 1, 2, 3 are true" or "all of the above are true" type of questions. `+this.format},async fetchAnswer(){this.isLoading=!0,this.answer="";const l=this.createPrompt(this.numberInput,this.selectedLevel,this.selectedSubject);try{this.answer=await g(l)}catch(e){console.error("Error fetching answer:",e),this.answer="An error occurred while generating the answer."}finally{this.isLoading=!1}}}},A={class:"form-group"},j=["value"],k={class:"form-group"},I=["value"],x={class:"form-group"},M=["disabled"],G={key:0,class:"mb-10"};function V(l,e,u,q,t,c){const f=L;return n(),o(d,null,[e[9]||(e[9]=r("h1",{class:"mb-5"},"Generate Challenge",-1)),r("form",{class:"mb-5",onSubmit:e[3]||(e[3]=v((...s)=>c.fetchAnswer&&c.fetchAnswer(...s),["prevent"]))},[r("div",A,[e[5]||(e[5]=r("label",{for:"level"},"Select Level",-1)),a(r("select",{"onUpdate:modelValue":e[0]||(e[0]=s=>t.selectedLevel=s),id:"level",class:"form-control"},[e[4]||(e[4]=r("option",{value:"",disabled:""},"Select Level",-1)),(n(!0),o(d,null,p(t.levels,s=>(n(),o("option",{key:s,value:s},i(s),9,j))),128))],512),[[m,t.selectedLevel]])]),r("div",k,[e[7]||(e[7]=r("label",{for:"subject"},"Select Subject",-1)),a(r("select",{"onUpdate:modelValue":e[1]||(e[1]=s=>t.selectedSubject=s),id:"subject",class:"form-control"},[e[6]||(e[6]=r("option",{value:"",disabled:""},"Select Subject",-1)),(n(!0),o(d,null,p(t.subjects,s=>(n(),o("option",{key:s,value:s},i(s),9,I))),128))],512),[[m,t.selectedSubject]])]),r("div",x,[e[8]||(e[8]=r("label",{for:"numberInput"},"Enter the desired number of questions",-1)),a(r("input",{"onUpdate:modelValue":e[2]||(e[2]=s=>t.numberInput=s),type:"number",id:"numberInput",class:"form-control",min:"1",placeholder:"Enter a number"},null,512),[[h,t.numberInput]])]),r("button",{type:"submit",disabled:!t.selectedLevel||!t.selectedSubject||!t.numberInput||t.isLoading},i(t.isLoading?"Asking Gemini...":"Ask"),9,M)],32),t.answer?(n(),o("div",G,[w(f,{answer:t.answer},null,8,["answer"])])):b("",!0)],64)}const B=y(_,[["render",V],["__scopeId","data-v-dfb61e98"]]);export{B as default};
